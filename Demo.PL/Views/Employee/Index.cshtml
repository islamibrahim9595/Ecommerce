@model IEnumerable<EmployeeViewModel>


@{
    ViewData["Title"] = "Index";
    string VDataMessage = ViewData["Message"] as string; // enforce type safety (ViewData stronglyTyped )
}

<h1>All Employees</h1>
<br />
<br />
<a asp-action="Create" asp-controller="Employee" class="btn btn-success">Create New Employee</a>
<br />
<br />

@*<div class="alert alert-warning">
    @ViewData["Message"]
    @VDataMessage
</div>*@
<br />
@*TempData*@
@if (TempData["Message"] != null)
{
    <div class="alert alert-warning">
        @TempData["Message"]
    </div>
}

<form class="my-3" asp-action="Index">
    <div class="row">
        <div class="col-sm-8">
            <input placeholder="search By Name" name="SearchValue" class="form-control"/>
        </div>
        <div class="col-sm-4">
            <input type="submit" value="search" class="btn btn-success btn-block" />
        </div>
    </div>

</form>

@if (Model.Count() > 0)
{
    <table>
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(D => D.Image)</th>

                <th>@Html.DisplayNameFor(D => D.Name)</th>
                <th>@Html.DisplayNameFor(D => D.Age)</th>
                <th>@Html.DisplayNameFor(D => D.Address)</th>
                <th>@Html.DisplayNameFor(D => D.Salary)</th>
                <th>@Html.DisplayNameFor(D => D.Email)</th>
                <th>@Html.DisplayNameFor(D => D.PhoneNumber)</th>
                <th>@Html.DisplayNameFor(D => D.IsActive)</th>
                <th>@Html.DisplayNameFor(D => D.HireDate)</th> 
                <th>@Html.DisplayNameFor(D => D.Department)</th> 
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>
                        <img src = "~/files/Images/@employee.ImageName" class="img-circle" width="40" height="40" alt="Employee Em"/>
                    </td>

                    <td>@Html.DisplayFor(E => @employee.Name)</td>
                    <td>@Html.DisplayFor(E => @employee.Age)</td>
                    <td>@Html.DisplayFor(E => @employee.Address)</td>
                    @*<td>@employee.Salary</td>*@
                    <td>@Html.DisplayFor(E => @employee.Salary)</td>
                    <td>@Html.DisplayFor(E => @employee.Email)</td>
                    <td>@Html.DisplayFor(E => @employee.PhoneNumber)</td>
                    <td>@Html.DisplayFor(E => @employee.IsActive)</td>
                    <td>@Html.DisplayFor(E => @employee.HireDate)</td>
                    <td>@Html.DisplayFor(E => @employee.Department.Name)</td>

                    <partial name="_ButtonsPartialView" model="@employee.Id">
                </tr>
            }

        </tbody>

    </table>
}
else
{
    <br />
    <div class="alert alert-warning">
        <p>There is No Employee!</p>
    </div>
}
